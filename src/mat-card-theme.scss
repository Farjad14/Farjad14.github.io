// Import all the tools needed to customize the theme and extract parts of it
@import '~@angular/material/theming';
@include mat-core();


$mat-primary-light-theme-foreground: (
  base:              #D4BCBC,
  divider:           $black-12-opacity,
  dividers:          $black-12-opacity,
  disabled:          rgba(black, 0.38),
  disabled-button:   rgba(black, 0.38),
  disabled-text:     rgba(black, 0.38),
  hint-text:         rgba(black, 0.38),
  secondary-text:    rgba(black, 0.54),
  icon:              rgba(black, 0.54),
  icons:             rgba(black, 0.54),
  text:              rgba(black, 0.87),
  slider-min:        rgba(black, 0.87),
  slider-off:        rgba(black, 0.26),
  slider-off-active: rgba(black, 0.38),
);
// Background palette for light themes.
$mat-primary-light-theme-background: (
status-bar: map_get($mat-orange, 300),
app-bar:    map_get($mat-orange, 100),
background: map_get($mat-orange, 50),
hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX
card:       #f7f7f7,
dialog:     white,
disabled-button: $black-12-opacity,
raised-button: white,
focused-button: $black-6-opacity,
selected-button: map_get($mat-grey, 300),
selected-disabled-button: map_get($mat-grey, 400),
disabled-button-toggle: map_get($mat-grey, 200),
unselected-chip: map_get($mat-grey, 300),
disabled-list-option: map_get($mat-grey, 200),
);


$mat-primary-dark-theme-foreground: (
  base:              #FFFFFF,
  divider:           $black-12-opacity,
  dividers:          $black-12-opacity,
  disabled:          #FFFFFF,
  disabled-button:   #FFFFFF,
  disabled-text:     #FFFFFF,
  hint-text:         #FFFFFF,
  secondary-text:    #FFFFFF,
  icon:              #FFFFFF,
  icons:             #FFFFFF,
  text:              #FFFFFF,
  slider-min:        #FFFFFF,
  slider-off:        #FFFFFF,
  slider-off-active: #FFFFFF,
);


// Background palette for light themes.
$mat-primary-dark-theme-background: (
  status-bar: map_get($mat-grey, 300),
  app-bar:    map_get($mat-grey, 100),
  background: map_get($mat-grey, 50),
  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX
  card:       #3F3F3F,
  dialog:     white,
  disabled-button: $black-12-opacity,
  raised-button: white,
  focused-button: $black-6-opacity,
  selected-button: map_get($mat-grey, 300),
  selected-disabled-button: map_get($mat-grey, 400),
  disabled-button-toggle: map_get($mat-grey, 200),
  unselected-chip: map_get($mat-grey, 300),
  disabled-list-option: map_get($mat-grey, 200),
);



$mat-secondary-light-theme-foreground: (
  base:              black,
  divider:           $black-12-opacity,
  dividers:          $black-12-opacity,
  disabled:          rgba(black, 0.38),
  disabled-button:   rgba(black, 0.38),
  disabled-text:     rgba(black, 0.38),
  hint-text:         rgba(black, 0.38),
  secondary-text:    rgba(black, 0.54),
  icon:              rgba(black, 0.54),
  icons:             rgba(black, 0.54),
  text:              rgba(black, 0.87),
  slider-min:        rgba(black, 0.87),
  slider-off:        rgba(black, 0.26),
  slider-off-active: rgba(black, 0.38),
);
// Background palette for light themes.
$mat-secondary-light-theme-background: (
status-bar: map_get($mat-grey, 300),
app-bar:    map_get($mat-grey, 100),
background: map_get($mat-grey, 50),
hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX
card:       #f7f7f7,
dialog:     white,
disabled-button: $black-12-opacity,
raised-button: white,
focused-button: $black-6-opacity,
selected-button: map_get($mat-grey, 300),
selected-disabled-button: map_get($mat-grey, 400),
disabled-button-toggle: map_get($mat-grey, 200),
unselected-chip: map_get($mat-grey, 300),
disabled-list-option: map_get($mat-grey, 200),
);

$mat-secondary-dark-theme-foreground: (
  base:              black,
  divider:           $black-12-opacity,
  dividers:          $black-12-opacity,
  disabled:          rgba(black, 0.38),
  disabled-button:   rgba(black, 0.38),
  disabled-text:     rgba(black, 0.38),
  hint-text:         rgba(black, 0.38),
  secondary-text:    rgba(black, 0.54),
  icon:              rgba(black, 0.54),
  icons:             rgba(black, 0.54),
  text:              rgba(black, 0.87),
  slider-min:        rgba(black, 0.87),
  slider-off:        rgba(black, 0.26),
  slider-off-active: rgba(black, 0.38),
);
// Background palette for light themes.
$mat-secondary-dark-theme-background: (
status-bar: map_get($mat-grey, 300),
app-bar:    map_get($mat-grey, 100),
background: map_get($mat-grey, 50),
hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX
card:       #7BDAFF,
dialog:     white,
disabled-button: $black-12-opacity,
raised-button: white,
focused-button: $black-6-opacity,
selected-button: map_get($mat-grey, 300),
selected-disabled-button: map_get($mat-grey, 400),
disabled-button-toggle: map_get($mat-grey, 200),
unselected-chip: map_get($mat-grey, 300),
disabled-list-option: map_get($mat-grey, 200),
);

// Creates a container object for a dark theme to be given to individual component theme mixins.
@function mat-primary-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {
    @return (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      is-dark: true,
      foreground: $mat-primary-dark-theme-foreground,
      background: $mat-primary-dark-theme-background,
    );
  }


  // Creates a container object for a dark theme to be given to individual component theme mixins.
@function mat-primary-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {
    @return (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      is-dark: false,
      foreground: $mat-primary-light-theme-foreground,
      background: $mat-primary-light-theme-background,
    );
  }

// Creates a container object for a dark theme to be given to individual component theme mixins.
@function mat-secondary-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {
    @return (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      is-dark: true,
      foreground: $mat-secondary-light-theme-foreground,
      background: $mat-secondary-light-theme-background,
    );
  }


  // Creates a container object for a dark theme to be given to individual component theme mixins.
@function mat-secondary-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {
    @return (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      is-dark: true,
      foreground: $mat-secondary-dark-theme-foreground,
      background: $mat-secondary-dark-theme-background,
    );
  }

@mixin mat-card-theme($theme) {
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  // .mat-card {
  //   background: mat-color($background, card);
  //   color: mat-color($foreground, text);
  // }

  .mat-card-subtitle {
    color: mat-color($foreground, secondary-text);
  }
}